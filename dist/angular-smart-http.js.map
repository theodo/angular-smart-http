{"version":3,"sources":["angular-smart-http.js"],"names":[],"mappings":";;;;AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,EAAE,GACxE,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAC5D,OAAO,EAAE,CAAC;CACX,CAAA,CAAC,IAAI,EAAE,YAAY;AAAE,cAAY,CAAC;;AAEjC,MAAM,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;AAC3B,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;;MAElB,SAAS;AAEF,aAFP,SAAS,CAED,KAAK,EAAE,EAAE,EAAE;4BAFnB,SAAS;;AAGX,UAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACtB,OAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAChB,UAAI,CAAC,KAAK,GAAG,SAAS,CAAC;KACxB;;iBANG,SAAS;;aAQV,aAAC,GAAG,EAAE;;;AACP,YAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;AACnC,YAAI,IAAI,CAAC,KAAK,EAAE;AACd,kBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B,MAAM;AACL,cAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAK;AACvC,kBAAK,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;AACzB,oBAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;WAC/B,CAAC,CAAC;SACJ;AACD,eAAO,QAAQ,CAAC,OAAO,CAAC;OACzB;;;aAEsB,0BAAC,KAAK,EAAE,EAAE,EAAE;AACjC,eAAO,IAAI,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;OACjC;;;WAvBG,SAAS;;;AA0Bf,MAAI,YAAY,GAAG,sBAAsB,CAAC;;AAE1C,SAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAC7B,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,gBAAgB,CAAC,CAAC;;AAEpD,MAAI,UAAU,GAAG,aAAa,CAAC;;AAE/B,MAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;CAEtD,CAAC,CAAE","file":"angular-smart-http.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory();\n}(this, function () { 'use strict';\n\n  const HTTP = new WeakMap();\n  const Q = new WeakMap();\n\n  class SmartHttp\n  {\n    constructor($http, $q) {\n      HTTP.set(this, $http);\n      Q.set(this, $q);\n      this.trads = undefined;\n    }\n\n    get(url) {\n      let deferred = Q.get(this).defer();\n      if (this.trads) {\n        deferred.resolve(this.trads);\n      } else {\n        HTTP.get(this).get(url).then((result) => {\n          this.trads = result.data;\n          deferred.resolve(result.data);\n        });\n      }\n      return deferred.promise;\n    }\n\n    static smartHttpFactory($http, $q) {\n      return new SmartHttp($http, $q);\n    }\n  }\n\n  var moduleName$1 = 'ngSmartHttp.services';\n\n  angular.module(moduleName$1, [])\n    .factory('SmartHttp', SmartHttp.smartHttpFactory);\n\n  var moduleName = 'ngSmartHttp';\n\n  var app = angular.module(moduleName, [moduleName$1]);\n\n}));"],"sourceRoot":"/source/"}